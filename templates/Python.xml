<templateSet group="Python">
  <template name="argparse" value="import argparse&#10;&#10;# Create the CLI parser&#10;parser = argparse.ArgumentParser(description='Description of script',&#10;                                 formatter_class=argparse.RawTextHelpFormatter)&#10;&#10;# Basic add_argument syntax&#10;parser.add_argument('variable', help='Help text string')&#10;&#10;# Define command line options&#10;# Example: parser.add_argument('--logfile', '-o', help='The name of the log file')&#10;parser.add_argument('--long_opt', '-short_opt', help='Help text string')&#10;&#10;# Define command line options with defined choices&#10;# Exxample: parser.add_argument('--outformat', '-o', help='The output format of the salt command. Highstate is the Salt default', choices=['text', 'json', 'yaml', 'highstate'])&#10;parser.add_argument('--long_opt', '-short_opt', help='Help text string', choices=['choice1', 'choice2', 'choice3'])&#10;&#10;# Define addition arguments to pass to the shell script&#10;# Example: parser.add_argument('--arg1', nargs='?', help='Optional first argument to the shell script')&#10;parser.add_argument('--option', nargs='?', help='Help text string')&#10;&#10;# Specify choice of terms that the user must input&#10;# Example: parser.add_argument('variable', help='Help text string', choices=['term1', 'term2', 'term3'])&#10;parser.add_argument('variable', help='Help text string', choices=['term1', 'term2', 'term3'])&#10;&#10;# Require specific arguments&#10;required = parser.add_argument_group('Required', 'Required arguments')&#10;required.add_argument('variable', help='help text')&#10;&#10;# Setup the parser&#10;args = parser.parse_args()" description="Code for using the argparse module" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>